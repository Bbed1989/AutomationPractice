package in.automationtesting.practice;

import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;
import org.testng.asserts.SoftAssert;
import Pages.Home;
import Pages.SeleniumRubyProduct;

public class HomePage {

	private WebDriver driver;
	String url = "http://practice.automationtesting.in/";
	SoftAssert softAssert = new SoftAssert();

	@Parameters({ "browser" })
	@BeforeMethod(alwaysRun = true)
	private void setUp(String browser) {
		// Create driver
		switch (browser) {
		case "chrome":
			System.setProperty("webdriver.chrome.driver", "src/main/resources/chromedriver.exe");
			driver = new ChromeDriver();
			break;
		case "firefox":
			System.setProperty("webdriver.gecko.driver", "src/main/resources/geckodriver.exe");
			driver = new FirefoxDriver();
			break;
		default:
			System.setProperty("webdriver.chrome.driver", "src/main/resources/chromedriver.exe");
			driver = new ChromeDriver();
			break;
		}
		driver.manage().window().maximize();

	}

	@Test
	public void homePage() {
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		Home homeObj = new Home(driver);
		SeleniumRubyProduct rubyObj = new SeleniumRubyProduct(driver);
		System.out.println("Starting homePage test");

//		1) Open the browser	
//		2) Enter the URL “http://practice.automationtesting.in/”
		driver.get(url);
		System.out.println("Page is opened.");

//		3) Click on Shop Menu
		homeObj.clickShopButton();// trying to add page object model

//		4) Now click on Home menu button
		homeObj.clickHomeButton();

//		5) Test whether the Home page has Three Arrivals only
		homeObj.printActualArrivalCount();

//		6) The Home page must contains only three Arrivals		
		int expectedArrivalCount = 3;
		softAssert.assertEquals(homeObj.actualArrivalCount(), expectedArrivalCount);

//		7) Now click the image in the Arrivals
		homeObj.clickSeleniumRybyImage();

//		8) Test whether it is navigating to next page where the user can add that book into his basket.
		String expectedURL = "http://practice.automationtesting.in/product/selenium-ruby/";
		String actualURL = driver.getCurrentUrl();
		System.out.println("Actual URL: " + actualURL);
		softAssert.assertEquals(actualURL, expectedURL, "Actual page is not as expected");

//		9) Image should be clickable and shoul navigate to next page where user can add that book to his basket
		softAssert.assertTrue(rubyObj.addToBasketButtonDisplayed());

//		10) Click on Description tab for the book you clicked on.
		rubyObj.clickkDescriptionTab();

//		11) There should be a description regarding that book the user clicked on
		WebElement descriptionText = driver.findElement(By.xpath("//div[@id='tab-description']/p"));
		String actualDescriptionText = descriptionText.getText();
		System.out.println("Actual description: " + actualDescriptionText);
		softAssert.assertTrue(actualDescriptionText.contains("The Selenium WebDriver Recipes book"));

//		12) Now clock on Reviews tab for the book you clicked on.
		WebElement reviewTab = driver.findElement(By.xpath("//a[@href='#tab-reviews']"));
		reviewTab.click();

//     13) There should be a Reviews regarding that book the user clicked on
		WebElement reviewText = driver
				.findElement(By.xpath("//div[@id='comments']/h2[@class='woocommerce-Reviews-title']"));
		String actualReviewText = reviewText.getText();
		System.out.println("Actual Review text: " + actualReviewText);
		softAssert.assertTrue(actualReviewText.contains("Reviews"));

//		14) Click on the Add To Basket button which adds that book to your basket
		WebElement addToBasketButton2 = driver.findElement(By.xpath("//button[@type='submit']"));
		addToBasketButton2.click();

//		15) User can view that Book in the Menu item with price.
		WebElement itemInBasket = driver.findElement(By.xpath("//*[@id=\"wpmenucartli\"]/a"));
//      16)String actualBasketString = itemInBasket.getText();
		softAssert.assertTrue(itemInBasket.getText().contains("500.00"));
		System.out.println("Cart displays: " + itemInBasket.getText());

	}

	@AfterMethod(alwaysRun = true)
	private void tearDown() {
		// Close browser
		driver.quit();
	}
}
